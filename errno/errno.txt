Error Functions
-many of the functions in the library set status indicators when error
or end of file occur.
The integer expressiono "errno" declared in <errno.h> may contain an error
number that gives further information about the most recent error
------
void clearerr(FILE *stream)
int feof(FILE *stream)
int ferror(FILE *stream)
void perror(const char *s)
------
use
void abort(void)
void exit(int status)
      |->EXIT_SUCCESS
      |->EXIT_FAILURE

------
int atexit(void (*fcn)(void))

Test - reduce erros and increase accuracy
-Test for accuracy
-Test for repeatability of a function
-texxt for maximizing uptime through proper handling of erros
-positive and negative test for return codes
-logging of retun codes
-logging of how long an application has been running
--logging of signals of an application
-test for code path
-complete halt of a program once an error has occured duringg the intial ddesign stage and the line number where the error occured.
-for saefty
-test for non loss of data and non curruption
-test for invalid inputs and logging of such inputs and the values
-make sure you have all warnings and pendantic error checking
-maximizeTime and code coverage
-when creating function ensure that there is dicatomy between return type or ensure that each different return type maps to one return condition
-"quick test on these return values are easily done with for instance an ‘if statement’" ref: http://www.geeksforgeeks.org/error-handling-c-programs/

Self healing software notes:


links:
https://www.tomsguide.com/us/darpa-self-healing-software,news-17761.html
https://www.tutorialspoint.com/cprogramming/c_error_handling.htm


Program correctness
-the proof of correctness of programs, use the rules of inference and proof techniques including mathematical unduction
-A program is said to be correct if itt produces the correct output for every possible input.

A proof that a programs in correct consits of two parts.
1)show that the correct answer is obtained if the program terminates.
2)That the program always termintes

--intial assertion
--final assertion

Check for blocking and nonblocking system calls

